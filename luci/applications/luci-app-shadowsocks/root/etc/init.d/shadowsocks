#!/bin/sh /etc/rc.common

START=95

IPSET_BLACKLIST="/etc/ipset/blacklist"
IPSET_WHITELIST="/etc/ipset/whitelist"
IPSET_RESERVE="/etc/ipset/reserve"

start() {

	ulimit -n 1024
	
	config_load "shadowsocks"
	config_get enabled config enabled
	config_get remote_server config remote_server
	config_get remote_port config remote_port
	config_get local_port config local_port
	config_get cipher config cipher
	config_get password config password
	config_get timeout config timeout
	config_get redir_enabled config redir_enabled
	config_get redir_port config redir_port
	config_get whitelist_enabled config whitelist_enabled
	config_get blacklist_enabled config blacklist_enabled
	config_get udp_enabled config udp_enabled
	config_get tunnel_enabled config tunnel_enabled
	config_get tunnel_port config tunnel_port
	config_get tunnel_forward config tunnel_forward
	config_get ota_enabled config ota_enabled
	config_get alt_enabled config alt_enabled
	config_get alt_server config alt_server
	config_get alt_port config alt_port
	config_get alt_passwd config alt_passwd
	config_get alt_cipher config alt_cipher
	config_get alt_timeout config alt_timeout
	config_get alt_ota_enabled config alt_ota_enabled
	config_get alt_redir_port config alt_redir_port

	[ "$ota_enabled" != '1' ] && unset ota_enabled

	[ "$enabled" = '1' ] && {
		/usr/bin/ss-local \
			-b "0.0.0.0" \
			-s "$remote_server" \
			-p "$remote_port" \
			-l "$local_port" \
			-m "$cipher" \
			-k "$password" \
			-t "$timeout" \
			${ota_enabled:+-A} \
			-u & 1> /dev/null
	}

	[ "$tunnel_enabled" = '1' ] && {

		if [ "$alt_enabled" = '0' ];then
			ARGS="-b "0.0.0.0" \
				  -s "$remote_server" \
				  -p "$remote_port" \
				  -l "$tunnel_port" \
				  -L "$tunnel_forward" \
				  -m "$cipher" \
				  -k "$password" \
				  -t "$timeout" \
				  -u ${ota_enabled:+-A}"
		else
			ARGS="-b "0.0.0.0" \
				  -s "$alt_server" \
				  -p "$alt_port" \
				  -l "$tunnel_port" \
				  -L "$tunnel_forward" \
				  -m "$alt_cipher" \
				  -k "$alt_passwd" \
				  -t "$alt_timeout" \
				  -u ${alt_ota_enabled:+-A}"
		fi

		/usr/bin/ss-tunnel $ARGS & 1> /dev/null
	}

	[ "$redir_enabled" = '1' ] && {
		/usr/bin/ss-redir \
			-b "0.0.0.0" \
			-s "$remote_server" \
			-p "$remote_port" \
			-l "$redir_port" \
			-m "$cipher" \
			-k "$password" \
			-t "$timeout" \
			${ota_enabled:+-A} \
			-u &

		iptables -t nat -N SHADOWSOCKS

		[ "$blacklist_enabled" = '1' ] && {
			sed -e "s/^/-A blacklist &/g" \
				-e "1 i\-N blacklist nethash" \
				$IPSET_BLACKLIST | ipset -R -!
			iptables -t nat -A SHADOWSOCKS -p tcp -m set --match-set blacklist src \
				-j RETURN
		}

		if [ "$whitelist_enabled" = '1' ];then
			(cat $IPSET_RESERVE;cat $IPSET_WHITELIST) |
			sed -e "s/^/-A whitelist &/g" \
				-e "1 i\-N whitelist nethash" |
			ipset -R -!
		else
			(cat $IPSET_RESERVE) |
			sed -e "s/^/-A whitelist &/g" \
				-e "1 i\-N whitelist nethash" |
			ipset -R -!
		fi

		ipset -! add whitelist $remote_server
		[ "$alt_enabled" = '1' ] && ipset -! add whitelist $alt_server

		iptables -t nat -A SHADOWSOCKS -p tcp -m set ! --match-set whitelist dst \
				-j REDIRECT --to-ports $redir_port

		[ "$udp_enabled" = '1' ] && {

			[ "$alt_enabled" = '1' ] && {
				redir_port=$alt_redir_port
				/usr/bin/ss-redir \
					-b "0.0.0.0" \
					-s "$alt_server" \
					-p "$alt_port" \
					-l "$alt_redir_port" \
					-m "$alt_cipher" \
					-k "$alt_passwd" \
					-t "$alt_timeout" \
					${alt_ota_enabled:+-A} \
					-U &
			}

			ip rule add fwmark 0x01/0x01 table 100
			ip route add local 0.0.0.0/0 dev lo table 100
			iptables -t mangle -N SS_UDP

			if [ "$blacklist_enabled" = '1' ];then
				iptables -t mangle -A SS_UDP -p udp -m set --match-set blacklist src \
					-j RETURN
			fi
			iptables -t mangle -A SS_UDP -p udp -m set ! --match-set whitelist dst \
					-j TPROXY --on-port $redir_port --tproxy-mark 0x01/0x01
			
			iptables -t mangle -A PREROUTING -p udp -j SS_UDP
		}

		iptables -t nat -I zone_lan_prerouting -j SHADOWSOCKS
	}
}

stop() {
	killall -q -9 ss-local
	killall -q -9 ss-tunnel
	killall -q -9 ss-redir && {
		iptables -t nat -D zone_lan_prerouting -j SHADOWSOCKS 2> /dev/null &&
		iptables -t mangle -D PREROUTING -p udp -j SS_UDP 2> /dev/null &&
		iptables -t nat -F SHADOWSOCKS 2> /dev/null &&
		iptables -t nat -X SHADOWSOCKS 2> /dev/null
		iptables -t mangle -F SS_UDP 2> /dev/null &&
		iptables -t mangle -X SS_UDP 2> /dev/null &&
		ip rule del fwmark 0x01/0x01 table 100 2>/dev/null &&
		ip route del local 0.0.0.0/0 dev lo table 100 2>/dev/null &&
		ipset destroy whitelist 2> /dev/null &&
		ipset destroy blacklist 2> /dev/null
	}
}
