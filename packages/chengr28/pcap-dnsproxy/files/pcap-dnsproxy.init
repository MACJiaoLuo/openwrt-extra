#!/bin/sh /etc/rc.common
# Copyright (C) 2015 wongsyrone

. /lib/functions.sh

START=95

EXTRA_COMMANDS="flush libver"
EXTRA_HELP="	flush	Flush DNS cache of Pcap_DNSProxy and system (dnsmasq's cache in OP)
	libver	Print current version of library"

SERVICE_DAEMONIZE=1

PROG="/usr/sbin/Pcap_DNSProxy"
CONFDIR="/etc/pcap-dnsproxy"

config_load "pcap-dnsproxy"

parse_pcap_dnsproxy()
{
	config_get ENABLED "$section" "enabled"
}

config_foreach parse_pcap_dnsproxy 'pcap-dnsproxy'

# MUST set Config.conf before 'enable' this service
# do NOT use daemon code inside pcap-dnsproxy, use start-stop-daemon instead.

start() {
	[ "1" = "$ENABLED" ] || [ "on" = "$ENABLED" ] || [ "true" = "$ENABLED" ] && {
		[ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
			echo "Pcap_DNSProxy is already running"
			exit 1
		}
		service_start $PROG -c $CONFDIR --disable-daemon
		RESULT=$?
		[ $RESULT -eq 0 -a $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
			echo "Pcap_DNSProxy started successfully"
		}
	} || {
		echo "Pcap_DNSProxy is disabled, please check /etc/config/pcap-dnsproxy for more info"
	}
}

stop() {
	# If you cant stop, use 'killall' instead.
	# e.g. killall -SIGTERM Pcap_DNSProxy
	[ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
		service_stop $PROG
		RESULT=$?
		[ $RESULT -eq 0 -a $(ps|grep ${PROG}|grep -v grep|wc -l) -eq 0 ] && {
			echo "Pcap_DNSProxy terminated successfully"
		} ||
			echo "Failed to terminate Pcap_DNSProxy"
			echo "Retry or use 'killall -SIG{TERM,KILL} Pcap_DNSProxy' instead"
		}
	} || {
		echo "Pcap_DNSProxy is not running"
	}
}

restart() {
	stop
	sleep 5s
	start
}

flush() {
	[ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
		$PROG --flush-dns
	} || {
		echo "Pcap_DNSProxy is not running"
	}
}

libver() {
	$PROG --lib-version
}
